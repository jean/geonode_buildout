[buildout]
extends = config.cfg
download-cache = .buildout/downloads

[mkdir_postgres]
# The postgres recipe doesn't handle creation 
recipe = z3c.recipe.mkdir
mode = 0700
paths = 
    ${config:postgres_data_dir}
    ${config:postgres_socket_dir}

[postgres]
recipe = zc.recipe.cmmi
url = http://ftp.postgresql.org/pub/source/v${config:postgres_version}/postgresql-${config:postgres_version}.tar.bz2

# Shorthand for some long commands
[pg]
connection = -h ${config:postgres_socket_dir} -p ${config:postgres_port} 
psql = ./psql ${:connection} --dbname=${config:postgres_db_name} --username=${config:postgres_superuser_name}
pg_ctl = ./pg_ctl --pgdata=${config:postgres_data_dir} 
pg_stop = ${:pg_ctl} -w --timeout=10 --mode=fast --silent stop
pg_start = ${:pg_ctl} -w --timeout=10 --mode=fast --silent start
createuser = ./createuser ${:connection}
createdb = ./createdb ${:connection}
createlang = ./createlang ${:connection}

[postgres_init1]
recipe = collective.recipe.cmd
on_install = true
on_update = true
shell = bash
cmds =
    set -e
    pushd ${postgres:location}/bin
    ${pg:pg_ctl} initdb
    popd

[postgres_config]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/postgres_geonode.conf.in
output = ${config:postgres_data_dir}/postgres_geonode.conf

[postgres_hba_config]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/pg_hba.conf.in
output = ${config:postgres_data_dir}/pg_hba.conf

# Build postgis first
[postgres_init2]
recipe = collective.recipe.cmd
on_install = true
on_update = true
shell = bash
cmds =
    echo "include = 'postgres_geonode.conf'" >> ${config:postgres_data_dir}/postgresql.conf
    pushd ${postgres:location}/bin
    ${pg:pg_start}
    ${pg:createuser} --superuser --createdb --createrole --username ${config:postgres_admin_name} ${config:postgres_superuser_name}
    ${pg:createdb} -E UTF8 -l en_US.UTF8 -T template0 ${config:postgres_db_name}
    ${pg:psql} -f ${postgres:location}/share/contrib/postgis-2.1/postgis.sql
    ${pg:psql} -f ${postgres:location}/share/contrib/postgis-2.1/spatial_ref_sys.sql
    ${pg:psql} -c 'GRANT ALL ON geometry_columns TO PUBLIC;'
    ${pg:psql} -c 'GRANT ALL ON spatial_ref_sys TO PUBLIC;'
    ${pg:psql} -c 'GRANT ALL ON geography_columns TO PUBLIC;'
    popd
    ${pg:pg_stop}

[proj]
recipe = zc.recipe.cmmi
url = http://download.osgeo.org/proj/proj-${config:proj_version}.tar.gz

[geos]
recipe = zc.recipe.cmmi
url = http://download.osgeo.org/geos/geos-${config:geos_version}.tar.bz2

[gdal]
recipe = zc.recipe.cmmi
# New URL pattern since 1.10
url = http://download.osgeo.org/gdal/${config:gdal_version}/gdal-${config:gdal_version}.tar.gz
extra_options =
    --with-geos=${geos:location}/bin/geos-config

[postgis]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/postgis/source/postgis-${config:postgis_version}.tar.gz
configure-options =
    --with-pgconfig=${postgres:location}/bin/pg_config
    --with-geosconfig=${geos:location}/bin/geos-config
    --with-projdir=${proj:location}
    --with-gdalconfig=${gdal:location}/bin/gdal-config

[psycopg2]
recipe = zc.recipe.egg:custom
egg = psycopg2
include-dirs =
    ${postgres:location}/include
library-dirs =
    ${postgres:location}/lib
rpath =
    ${postgres:location}/lib

