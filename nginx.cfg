[buildout]
extends = config.cfg

parts = 
    nginx
    nginx-geonode

[nginx]
recipe = zc.recipe.cmmi
url = http://nginx.org/download/nginx-${config:nginx_version}.tar.gz
extra_options =
    --without-http_rewrite_module

[nginx-geonode]
recipe = gocept.nginx
hostname = ${config:geonode_public_domain}
port = ${config:geonode_port}
configuration =
    daemon off;
    events {
        worker_connections 1024;
    }
    http {
        server {
            listen ${config:geonode_port};
            access_log ${config:nginx_logs}/access_${config:nginx_hostname}_nginx.log;
            error_log ${config:nginx_logs}/error_${config:nginx_hostname}_nginx.log;
            # serve staticfiles
            location /static/ {
                include ${nginx:location}/conf/mime.types;
                alias   ${config:geonode_static}
                expires 7d;
            }
            # serve mediafiles, default 'uploaded' in GeoNode
            location /uploaded/ {
                alias   ${config:geonode_uploaded}
                expires 7d;
            }
            # geoserver proxy
            location /geoserver/ {
                proxy_pass http://${config:tomcat_hostname}:${config:tomcat_connector_port}/geoserver/;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
            }
            # gunicorn/uwsgi wsgi proxy
            location / {
                proxy_pass_header Server;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Scheme $scheme;
                proxy_connect_timeout 20;
                proxy_read_timeout 20;
                proxy_pass http://${config:geonode_hostname}:${config:geonode_port}/;
            }
        }
    }

